node {

    stage('Integrate Remote k8s with Jenkins') {
        sh "rm -rf *"
        sh "mkdir -p ~/.kube"
        withCredentials([file(credentialsId: 'kube', variable: 'FILE')]) {
            sh 'cp $FILE ~/.kube/config'
        }
        sh "curl -LO 'https://dl.k8s.io/release/v1.32.2/bin/linux/amd64/kubectl'"
        sh "chmod +x kubectl"
        sh "./kubectl get nodes"
        sh "./kubectl get pods"
    }

    stage('Install Helm') {
        sh 'curl -LO "https://get.helm.sh/helm-v3.16.4-linux-amd64.tar.gz"'
        sh 'tar -zxvf helm-*-linux-amd64.tar.gz'
        sh 'cp linux-amd64/helm helm'
        sh './helm version'
        sh './helm list'

    }
    stage('Clone GitHub Repo via SSH') {
        withCredentials([sshUserPrivateKey(credentialsId: 'github-ssh-key', keyFileVariable: 'SSH_KEY')]) {
            sh """
                ls -al
                pwd
                eval \$(ssh-agent -s)
                ssh-add \$SSH_KEY
                ssh-keyscan github.com >> ~/.ssh/known_hosts
                git clone ${full_git}
                ls -al district16
                ls -al district16/
                ls -al
                cd district16
                git submodule add -b feature git@github.com:nvestan/docker-react.git district16/library/
                ls district16/
                ls -al district16/library/
            """
        }
    }
    stage('Clone Repository') {
        git branch: 'main', credentialsId: 'github-ssh-key', url: 'git@github.com:nvestan/docker-react.git'
    }
    stage('Run Bash Script from workspace') {
        sh "ls -al"
        sh "pwd"
        sh "chmod +x myscript.sh"
        sh "${env.WORKSPACE}/./myscript.sh"
    }
    stage('helm') {
        sh """
          pwd
          ls -al ${env.WORKSPACE}
          export PATH="${env.WORKSPACE}:$PATH"
          mkdir test && cd test && pwd && helm list
        """
    }
}
